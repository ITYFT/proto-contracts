
syntax = "proto3";
package admin_auth;
import "google/protobuf/empty.proto";

enum AuthError{
    LoginAlreadyInUse = 0;
    UserNotFound = 1;
    InvalidLogin = 2;
    InvalidPassword = 3;
    InvalidToken = 4;
    StaleToken = 5;
}


message AdminAuthRegisterUserGrpcRequest{
    string Login = 1;
    string Password = 2;
}

message AdminAuthRegisterUserGrpcResponse{
    optional AuthError Error = 1;
    optional string AuthToken = 2;
    optional string RefreshToken = 3;
}

message AdminAuthUpdatePasswordGrpcRequest{
    string Login = 1;
    string NewPassword = 2;
}

message AdminAuthUpdatePasswordGrpcResponse{
    optional AuthError Error = 1;
    optional string AuthToken = 2;
    optional string RefreshToken = 3;
}

message AdminAuthenticateGrpcRequest{
    string Login = 1;
    string Password = 2;
}

message AdminAuthenticateGrpcResponse{
    optional AuthError Error = 1;
    optional string AuthToken = 2;
    optional string RefreshToken = 3;
}

message AdminAuthRefreshGrpcRequest{
    string RefreshToken = 1;
}

message AdminAuthRefreshGrpcResponse{
    optional AuthError Error = 1;
    optional string AuthToken = 2;
    optional string RefreshToken = 3;
}

message AdminAuthValidateJwtRequest{
    string AuthToken = 1;
}

message AdminAuthValidateJwtResponse{
    optional AuthError Error = 1;
}


service AdminAuthService {
    rpc Register(AdminAuthRegisterUserGrpcRequest) returns (AdminAuthRegisterUserGrpcResponse);
    rpc Refresh(AdminAuthRefreshGrpcRequest) returns (AdminAuthRefreshGrpcResponse);
    rpc UpdatePassword(AdminAuthUpdatePasswordGrpcRequest) returns (AdminAuthUpdatePasswordGrpcResponse);
    rpc Authenticate(AdminAuthenticateGrpcRequest) returns (AdminAuthenticateGrpcResponse);
    rpc Validate(AdminAuthValidateJwtRequest) returns (AdminAuthValidateJwtResponse);
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}
